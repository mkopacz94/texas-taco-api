// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TexasTaco.Products.Core.Data.EF;

#nullable disable

namespace TexasTaco.Products.Core.Data.EF.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20240610173443_PrizeEntityCreated")]
    partial class PrizeEntityCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Prize", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RequiredPointsAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prize");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Recommended")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("PictureId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Prize", b =>
                {
                    b.HasOne("TexasTaco.Products.Core.Entities.Product", "Product")
                        .WithMany("Prizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Product", b =>
                {
                    b.HasOne("TexasTaco.Products.Core.Entities.Picture", "Picture")
                        .WithOne("Product")
                        .HasForeignKey("TexasTaco.Products.Core.Entities.Product", "PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Picture", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("TexasTaco.Products.Core.Entities.Product", b =>
                {
                    b.Navigation("Prizes");
                });
#pragma warning restore 612, 618
        }
    }
}
